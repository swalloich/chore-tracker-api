{
  "swagger": "2.0",
  "info": {
    "title": "Chore Tracker API",
    "description": "API for tracking chores",
    "version": "1.0.0"
  },
  "host": "fantastic-parakeet-ogz0.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/collections/{user_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Chore collection data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCollection"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/collections/{user_id}/{collection_id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the collection to get"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the collection to delete"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the collection to update"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update data for the collection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/chores/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Get all chores in the list of ids, or all chores if not specified. Recommend using GET /chores/:id if only one chore is needed",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Chore data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewChore"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/chores/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the chore to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the chore to get"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "update the specified chore",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Chore"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Get all users in the list of ids, or all users if not provided",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Chore data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the chore to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the chore to get"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "update the specified chore",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "NewChore": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Take out the trash"
        },
        "collectionId": {
          "type": "string",
          "example": "collection_id"
        },
        "description": {
          "type": "string",
          "example": "The trash needs to be taken out"
        },
        "frequency": {
          "type": "string",
          "example": "1w"
        },
        "nextDue": {
          "type": "string",
          "example": "3000-02-09T19:00:00-07:00"
        },
        "currentAssignee": {
          "type": "string",
          "example": "user_id"
        },
        "assignedUsers": {
          "type": "array",
          "example": [
            "user_id"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "nextDue",
        "currentAssignee",
        "assignedUsers"
      ]
    },
    "Chore": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Take out the trash"
        },
        "collectionId": {
          "type": "string",
          "example": "collection_id"
        },
        "description": {
          "type": "string",
          "example": "The trash needs to be taken out"
        },
        "frequency": {
          "type": "string",
          "example": "1w"
        },
        "nextDue": {
          "type": "string",
          "example": "3000-02-09T19:00:00-07:00"
        },
        "currentAssignee": {
          "type": "string",
          "example": "user_id"
        },
        "assignedUsers": {
          "type": "array",
          "example": [
            "user_id"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NewCollection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Kitchen Chores"
        },
        "description": {
          "type": "string",
          "example": "Chores for the kitchen"
        },
        "chores": {
          "type": "array",
          "example": [
            "chore_id"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "Collection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Kitchen Chores"
        },
        "description": {
          "type": "string",
          "example": "Chores for the kitchen"
        },
        "chores": {
          "type": "array",
          "example": [
            "chore_id"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "password"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    }
  }
}